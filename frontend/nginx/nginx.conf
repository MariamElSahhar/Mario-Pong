events {}
http {
	include /etc/nginx/mime.types;

	server {
		listen 80;
		server_name _;

		return 301 https://$host$request_uri;
	}

	server {
		listen 443 ssl;
		server_name _;

		ssl_certificate /etc/ssl/myserver.crt;
		ssl_certificate_key /etc/ssl/myserver.key;

		location / {
			root /usr/share/nginx/html;
			index index.html;
			try_files $uri /index.html;
		}

		location /api/ {
			proxy_pass http://backend:8000/api/;
			proxy_http_version 1.1;

			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;

			# Properly forward real IP
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_cache_bypass $http_upgrade;

			proxy_redirect http:// https://;
		}

		location /media/ {
    		proxy_pass http://backend:8000/media/;
			proxy_http_version 1.1;

			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-Proto $scheme;


			proxy_cache_bypass $http_upgrade;

			proxy_redirect http:// https://;
		}

		location /ws/ {
			proxy_pass http://backend:8000/ws/;

			proxy_http_version 1.1;

			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-Proto $scheme;

			proxy_cache_bypass $http_upgrade;
		}
	}
}
